---
import Layout from '../layouts/Layout.astro';
import {
  Card,
  CardContent,
  CardHeader,
} from "@/components/ui/card"
import { buttonVariants } from "@/components/ui/button"
---

<Layout title="hi~!" description="this is wave's site<3">
	<main>
    <div id="custom-cursor"></div>
    <canvas id="rainCanvas"></canvas>
    <br />
		<Card id="card" style={{position: "relative", zIndex: 1}} className='fade-in xl:w-[450px] md:w-[450px] mx-5'><CardHeader><h1 class="text-6xl font-bold">hi!~ im wave</h1></CardHeader><CardContent><h4 class="text-xl">hi, im wave, i am 15 and i like to make stuff</h4><br />
    <a href="https://github.com/13waves" class={buttonVariants({ variant: "outline" })}>      <div class="mr-2 h-4 w-4 invert"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>GitHub</title><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></div> GitHub
    </a>
    <a href="https://discord.com/channels/@me/836279485984538634" class={buttonVariants({ variant: "outline" })}>      <div class="mr-2 h-4 w-4 invert"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Discord</title><path d="M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.946 2.4189-2.1568 2.4189Z"/></svg></div> Discord
    </a>
    </CardContent></Card>
  	</main>
</Layout>

<style is:inline>
  .fade-in {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 1s ease-out, transform 1s ease-out;
}

.fade-in-visible {
  opacity: 1;
  transform: translateY(0);
}

body {
  cursor: none;
  user-select: none;
}

#custom-cursor {
  width: 40px; 
  height: 40px; 
  position: absolute;
  border: 3px solid rgba(255, 255, 255, 0.2); 
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.1); 
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3); 
  pointer-events: none; 
  transition: transform 0.2s ease-out, opacity 0.2s ease-out; 
  transform: translate(-50%, -50%) scale(1); 
  z-index: 9999;
  opacity: 1;
  animation: subtleGlow 5s infinite alternate; 
  visibility: hidden;
}

@keyframes subtleGlow {
  0% {
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.2);
  }
  100% {
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.4);
  }
}

.hover-grow #custom-cursor {
  transform: translate(-50%, -50%) scale(1.5); 
  opacity: 0.8;
}


a:hover, button:hover {
  cursor: none;
}


  #rainCanvas {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1; 
    }
</style>

<script is:inline>

const card = document.getElementById("card");

let isDragging = false; // Flag to check if the card is being dragged
let offsetX, offsetY; // Variables to hold offset values

// Mouse down event to start dragging
card.addEventListener("mousedown", (e) => {
  isDragging = true;
  offsetX = e.clientX - card.getBoundingClientRect().left; // Calculate the offset
  offsetY = e.clientY - card.getBoundingClientRect().top; // Calculate the offset
  card.style.cursor = 'none'; // Change cursor to grabbing
});

// Mouse move event to drag the card
document.addEventListener("mousemove", (e) => {
  if (isDragging) {
    card.style.left = `${e.clientX - offsetX}px`; // Update card's left position
    card.style.top = `${e.clientY - offsetY}px`; // Update card's top position
  }
});

// Mouse up event to stop dragging
document.addEventListener("mouseup", () => {
  isDragging = false; // Reset dragging flag
  card.style.cursor = 'none'; // Change cursor back to grab
});
const cursor = document.querySelector('#custom-cursor');

document.addEventListener('mousemove', (e) => {
  cursor.style.top = `${e.clientY}px`;
  cursor.style.left = `${e.clientX}px`;
  cursor.style.visibility = 'visible'; 
});

const hoverElements = document.querySelectorAll('a, button, .hover-target');

hoverElements.forEach((element) => {
  element.addEventListener('mouseenter', () => {
    document.body.classList.add('hover-grow');
  });

  element.addEventListener('mouseleave', () => {
    document.body.classList.remove('hover-grow');
  });
});


  document.addEventListener('DOMContentLoaded', () => {
  const elements = document.querySelectorAll('.fade-in');
  elements.forEach((element, index) => {
    setTimeout(() => {
      element.classList.add('fade-in-visible');
    }, index * 500);
  });
});

  const canvas = document.getElementById("rainCanvas");
  const ctx = canvas.getContext("2d");
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;

  class Raindrop {
    constructor() {
      this.x = Math.random() * canvas.width;
      this.y = Math.random() * canvas.height;
      this.length = Math.random() * 20 + 10;
      this.speed = Math.random() * 5 + 2;
      this.opacity = Math.random() * 0.5 + 0.3;
      this.width = Math.random() * 1 + 0.5;
    }

    update() {
      this.y += this.speed;
      if (this.y > canvas.height) {
        this.y = -this.length;
        this.x = Math.random() * canvas.width;
      }
    }

    draw() {
      ctx.strokeStyle = `rgba(255, 255, 255, ${this.opacity})`;
      ctx.lineWidth = this.width;
      ctx.beginPath();
      ctx.moveTo(this.x, this.y);
      ctx.lineTo(this.x, this.y + this.length);
      ctx.stroke();
    }
  }

  const raindrops = [];
  for (let i = 0; i < 300; i++) {
    raindrops.push(new Raindrop());
  }

  function animate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    raindrops.forEach(raindrop => {
      raindrop.update();
      raindrop.draw();
    });
    requestAnimationFrame(animate);
  }

  animate();

  window.addEventListener('resize', function() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  });
</script>